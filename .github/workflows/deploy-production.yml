name: Deploy SvelteKit App

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install dependencies
      run: bun install

    - name: Build project
      run: bun run build
      env:
        PORT: ${{ secrets.APP_PORT }}  # Pass port during build if needed

    # SSH Key setup and test before deploy
    - name: Setup SSH and Verify Access
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

        echo "Testing SSH connection..."
        ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} "echo 'SSH OK'"

    - name: Deploy to VPS
      uses: easingthemes/ssh-deploy@main
      with:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        REMOTE_HOST: ${{ secrets.SSH_HOST }}
        REMOTE_USER: ${{ secrets.SSH_USERNAME }}
        SOURCE: "./"
        TARGET: ${{ secrets.APP_DIR }}
        ARGS: '-avz --delete'
        EXCLUDE: 'node_modules, .env, .git, .github'

    - name: Configure and Restart Service
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          # Load environment variables
          source ~/.bashrc
          export PATH="$PATH:/home/deployer/.bun/bin:/home/deployer/.local/bin"

          # Navigate to app directory
          cd ${{ secrets.APP_DIR }}

          # Update port in ecosystem config
          sed -i "s/PORT: [0-9]*/PORT: ${{ secrets.APP_PORT }}/g" ecosystem.config.js

          # Ensure directory structure
          mkdir -p ~/.pm2/logs
          touch ~/.pm2/logs/app-error.log

          # Install production dependencies
          bun install --production

          # PM2 process management
          pm2 reload ecosystem.config.js --env production --update-env
          pm2 save
          pm2 list

          # Verify service status
          curl -sI http://localhost:${{ secrets.APP_PORT }} || true